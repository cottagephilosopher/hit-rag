version: '3.8'

services:
  # Milvus 向量数据库
  milvus:
    image: docker.m.daocloud.io/milvusdb/milvus:v2.6.2
    container_name: hit-rag-milvus
    command: milvus run standalone
    environment:
      ETCD_USE_EMBED: "true"
      ETCD_DATA_DIR: /var/lib/milvus/etcd
      COMMON_STORAGETYPE: local
      DEPLOY_MODE: STANDALONE
    volumes:
      - ~/docker_file/milvus:/var/lib/milvus
    ports:
      - "19530:19530"
      - "9091:9091"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 90s
    restart: unless-stopped
    networks:
      - rag-network

  # 后端 API 服务
  backend:
    build:
      context: ..
      dockerfile: deploy/Dockerfile
    container_name: hit-rag-backend
    environment:
      - MILVUS_HOST=milvus
      - MILVUS_PORT=19530
      # 覆盖容器内的路径配置，指向容器内的实际映射路径
      - ALL_MD_DIR=/app/all-md
      - OUTPUT_DIR=/app/output
      - LOG_FILE=/app/logs/rag_preprocessor.log
      - DB_FILE=/app/.dbs/rag_preprocessor.db
    env_file:
      - ../.env
    volumes:
      # 映射 .env 配置文件
      - ../.env:/app/.env:ro
      # 映射文档目录（根据 .env 中的 ALL_MD_DIR 配置，这里使用相对路径示例）
      - ../../all-md:/app/all-md:rw
      # 映射日志目录
      - ../../logs:/app/logs
      # 映射数据库文件
      - ../.dbs:/app/.dbs
      # 映射输出目录
      - ../../output:/app/output:rw
    ports:
      - "8086:8086"
    depends_on:
      milvus:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/api/assistants"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    command: ["uv", "run", "python", "api_server.py"]
    networks:
      - rag-network

networks:
  rag-network:
    driver: bridge
